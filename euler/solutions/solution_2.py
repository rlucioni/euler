"""Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""
import sys

from ..utilities import timed_execution


def sum_even_fibonaccis(limit):
    """Find the sum of all even terms in the Fibonacci sequence whose values
    do not exceed the provided limit.
    """
    # Fibonacci seed values are 0 and 1.
    previous, current, even_fibonacci_sum = 0, 1, 0

    while previous + current <= limit:
        # This is a memoized calculation; a matrix calculation would be faster.
        previous, current = current, previous + current

        # Check if the current term in the sequence is even.
        if current % 2 is 0:
            even_fibonacci_sum += current

    return even_fibonacci_sum


limit = int(sys.argv[1])

timed_execution.timed_execution(sum_even_fibonaccis, limit)
